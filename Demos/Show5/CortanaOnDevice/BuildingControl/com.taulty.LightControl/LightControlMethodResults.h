//-----------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
//
//   For more information, see: http://go.microsoft.com/fwlink/?LinkID=623246
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

using namespace concurrency;

namespace com { namespace taulty { namespace LightControl {

ref class LightControlConsumer;

public ref class LightControlGetBuildingDefinitionJsonResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Platform::String^ Json
    {
        Platform::String^ get() { return m_interfaceMemberJson; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberJson = value; }
    }
    
    static LightControlGetBuildingDefinitionJsonResult^ CreateSuccessResult(_In_ Platform::String^ interfaceMemberJson)
    {
        auto result = ref new LightControlGetBuildingDefinitionJsonResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Json = interfaceMemberJson;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LightControlGetBuildingDefinitionJsonResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LightControlGetBuildingDefinitionJsonResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
    Platform::String^ m_interfaceMemberJson;
};

public ref class LightControlSwitchBuildingResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static LightControlSwitchBuildingResult^ CreateSuccessResult()
    {
        auto result = ref new LightControlSwitchBuildingResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LightControlSwitchBuildingResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LightControlSwitchBuildingResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class LightControlSwitchRoomResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static LightControlSwitchRoomResult^ CreateSuccessResult()
    {
        auto result = ref new LightControlSwitchRoomResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LightControlSwitchRoomResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LightControlSwitchRoomResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class LightControlToggleRoomLightResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    
    static LightControlToggleRoomLightResult^ CreateSuccessResult()
    {
        auto result = ref new LightControlToggleRoomLightResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->m_creationContext = Concurrency::task_continuation_context::use_current();
        return result;
    }
    
    static LightControlToggleRoomLightResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new LightControlToggleRoomLightResult();
        result->Status = status;
        return result;
    }
internal:
    Concurrency::task_continuation_context m_creationContext = Concurrency::task_continuation_context::use_default();

private:
    int32 m_status;
};

public ref class LightControlJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property LightControlConsumer^ Consumer
    {
        LightControlConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ LightControlConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    LightControlConsumer^ m_consumer;
};

} } } 
